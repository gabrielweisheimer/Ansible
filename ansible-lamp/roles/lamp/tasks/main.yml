---
- name: Add php repository from PPA
  ansible.builtin.apt_repository:
   repo: ppa:ondrej/php
- name: Instala php7.4 e dependencias
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name:
      - php7.4
      - apache2
      - libapache2-mod-php7.4
      - php7.4-gd
      - php7.4-ssh2
      - php7.4-mcrypt
      - python3-mysqldb
      - python3-pip
      - python3-pymysql
      - mysql-server
      - php7.4-mysql
    state: latest
- name: cria db MySQL
  ansible.builtin.mysql_db:
    name: "{{ wp_db_name}}"
    login_user: root
    login_password: root
    state: present 
- name: cria usuario MySQL
  ansible.builtin.mysql_user:
    login_user: root
    login_password: root
    name: "{{ wp_db_user}}"
    password: "{{  wp_db_passwd }}"
    priv: '{{ wp_db_name}}.*:ALL'
    state: present
- name: Download wordpress
  ansible.builtin.get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
    mode: '0755'
- name: Verify if wp-config.php existis
  stat:
    path: "{{ wp_install_dir }}/wp-config.php"
  register: wp_config 
- name: Extract wordpress into /var/www/
  ansible.builtin.unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /var/www/
    remote_src: yes
    owner: www-data
    group: www-data
  when: not wp_config.stat.exists
- name: Create wp-config.php from wp-config-sample.php
  shell: "mv {{ wp_install_dir }}/wp-config-sample.php {{ wp_install_dir }}/wp-config.php"
  when: not wp_config.stat.exists
- name: Configure DB on wp-config.php
  replace:
    path: "{{ wp_install_dir }}/wp-config.php"
    regexp: "{{ item.regex }}"
    replace: "{{ item.value }}"
  with_items:
    - { regex: 'database_name_here', value: "{{ wp_db_name}}" }
    - { regex: 'username_here', value: "{{ wp_db_user}}" }
    - { regex: 'password_here', value: "{{  wp_db_passwd }}" }
- name: Configura apache para servir wp-config-sample.php
  template:
    src: default.conf.j2
    dest: /etc/apache2/sites-available/000-default.conf
  notify: 
    - restart apache
